import { ITreeConstructor, ITreeData, ITreeOptions } from './interface';
import { Tree } from './Tree';
export declare class BaseTree<T> {
    id: string | number;
    protected children: Array<BaseTree<T>>;
    protected parent: BaseTree<T> | Tree<T>;
    protected data: T;
    protected ChildConstructor: ITreeConstructor<T>;
    constructor(data: ITreeData<T>, parent?: BaseTree<T> | Tree<T>, options?: ITreeOptions<T>);
    getChildren(): Array<BaseTree<T>>;
    toArray(): Array<BaseTree<T>>;
    getData(): T;
    set<K extends keyof T>(key: K, value: T[K]): void;
    get<K extends keyof T>(key: K): T[K];
    getExtended<K extends keyof T>(key: K): T[K];
    getParent(): BaseTree<T> | Tree<T>;
    getRoot(): Tree<T>;
}
