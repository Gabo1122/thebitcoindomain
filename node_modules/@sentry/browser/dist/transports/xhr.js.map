{"version":3,"file":"xhr.js","sourceRoot":"","sources":["../../src/transports/xhr.ts"],"names":[],"mappings":";;AAAA,uCAAwD;AAExD,+BAAuC;AAEvC,4BAA4B;AAC5B;IAAkC,wCAAa;IAA/C;;IA4BA,CAAC;IA3BC;;OAEG;IACI,gCAAS,GAAhB,UAAiB,KAAY;QAA7B,iBAuBC;QAtBC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CACrB,IAAI,OAAO,CAAW,UAAC,OAAO,EAAE,MAAM;YACpC,IAAM,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;YAErC,OAAO,CAAC,kBAAkB,GAAG;gBAC3B,IAAI,OAAO,CAAC,UAAU,KAAK,CAAC,EAAE;oBAC5B,OAAO;iBACR;gBAED,IAAI,OAAO,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC1B,OAAO,CAAC;wBACN,MAAM,EAAE,cAAM,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;qBAC5C,CAAC,CAAC;iBACJ;gBAED,MAAM,CAAC,OAAO,CAAC,CAAC;YAClB,CAAC,CAAC;YAEF,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC;YAC/B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AA5BD,CAAkC,oBAAa,GA4B9C;AA5BY,oCAAY","sourcesContent":["import { Event, Response, Status } from '@sentry/types';\n\nimport { BaseTransport } from './base';\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): Promise<Response> {\n    return this._buffer.add(\n      new Promise<Response>((resolve, reject) => {\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = () => {\n          if (request.readyState !== 4) {\n            return;\n          }\n\n          if (request.status === 200) {\n            resolve({\n              status: Status.fromHttpCode(request.status),\n            });\n          }\n\n          reject(request);\n        };\n\n        request.open('POST', this.url);\n        request.send(JSON.stringify(event));\n      }),\n    );\n  }\n}\n"]}