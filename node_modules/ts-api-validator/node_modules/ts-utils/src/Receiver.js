"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Receiver = (function () {
    function Receiver() {
    }
    Receiver.prototype.receive = function (signal, handler, context) {
        receive.call(this, signal, handler, context, false);
    };
    Receiver.prototype.receiveOnce = function (signal, handler, context) {
        receive.call(this, signal, handler, context, true);
    };
    Receiver.prototype.stopReceive = function (item, handler) {
        var _this = this;
        if (!this.__received) {
            return null;
        }
        if (typeof item === 'function') {
            handler = item;
            item = null;
        }
        if (!item) {
            Object.keys(this.__received).forEach(function (cid) {
                _this.stopReceive(_this.__received[cid].signal, handler);
            });
            return null;
        }
        if (!handler) {
            this.__received[item.cid].handlers.forEach(function (myHandler) {
                _this.stopReceive(item, myHandler);
            });
            return null;
        }
        var handlers = this.__received[item.cid].handlers;
        for (var i = handlers.length; i--;) {
            if (handlers[i] === handler) {
                handlers.splice(i, 1);
                this.__received[item.cid].signal.off(handler);
            }
        }
        if (!handlers.length) {
            delete this.__received[item.cid];
        }
    };
    return Receiver;
}());
exports.Receiver = Receiver;
function receive(signal, handler, context, isOnce) {
    if (!this.__received) {
        this.__received = Object.create(null);
    }
    if (isOnce) {
        signal.once(handler, context, this);
    }
    else {
        signal.on(handler, context, this);
    }
    if (!this.__received[signal.cid]) {
        this.__received[signal.cid] = {
            handlers: [handler],
            signal: signal
        };
    }
    else {
        this.__received[signal.cid].handlers.push(handler);
    }
}
//# sourceMappingURL=Receiver.js.map