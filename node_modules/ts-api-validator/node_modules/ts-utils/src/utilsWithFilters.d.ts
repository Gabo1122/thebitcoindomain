import { IBinaryFilter, IFilter } from './filters';
export declare function find<T extends object>(some: T[] | {
    [key: string]: T;
}, target: object | IFilter<T, boolean>): T | void;
export declare function binaryFind<T extends object>(some: Array<T>, target: IBinaryFilter<T>): IBinaryResult<T>;
export interface IBinaryResult<T> {
    index: number;
    value: T | void;
}
