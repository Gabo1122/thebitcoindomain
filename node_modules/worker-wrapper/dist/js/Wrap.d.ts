import { ISimpleWrap, IWorkerClassData, IWrapProcess } from './interface';
export declare class Wrap<T, R> implements ISimpleWrap, IWrapProcess<T> {
    private readonly _worker;
    private readonly _actionsHash;
    private readonly _ready;
    private readonly _stringifyMode;
    private readonly _serializer;
    private readonly _parser;
    constructor(worker: Worker, classData: IWorkerClassData<T, R>, libs?: Array<string>, stringifyMode?: boolean);
    process(cb: Function, params?: any): Promise<any>;
    terminate(): void;
    private _setHandlers;
    private _onMessage;
    private _sendMessage;
    private _getSendData;
    private _addLibs;
    private _addProcessor;
}
