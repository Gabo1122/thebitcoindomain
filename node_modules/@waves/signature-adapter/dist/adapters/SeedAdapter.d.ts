import { Adapter, IUser } from './Adapter';
import { AdapterType } from '../config';
import { SIGN_TYPE } from '../prepareTx';
export declare class SeedAdapter extends Adapter {
    private seed;
    static type: AdapterType;
    constructor(data: string | IUser, networkCode?: string | number);
    getSignVersions(): Record<SIGN_TYPE, Array<number>>;
    getPublicKey(): Promise<string>;
    getPrivateKey(): Promise<string>;
    getAddress(): Promise<string>;
    getSeed(): Promise<string>;
    signRequest(bytes: Uint8Array): Promise<string>;
    signTransaction(bytes: Uint8Array, amountPrecision: number): Promise<string>;
    signOrder(bytes: Uint8Array, amountPrecision: number): Promise<string>;
    signData(bytes: Uint8Array): Promise<string>;
    private _sign;
    static isAvailable(): Promise<boolean>;
}
