export declare function keys<T extends Record<keyof any, any>>(o: T): Array<keyof T>;
export declare function uniqueId(prefix: string): string;
export declare function toArray<T>(some: T | T[]): T[];
export declare function pipe<T, R>(a: (data: T) => R): (data: T) => R;
export declare function pipe<T, U, R>(a: (data: T) => U, b: (data: U) => R): (data: T) => R;
export declare function pipe<T, U, E, R>(a: (data: T) => U, b: (data: U) => E, c: (data: E) => R): (data: T) => R;
