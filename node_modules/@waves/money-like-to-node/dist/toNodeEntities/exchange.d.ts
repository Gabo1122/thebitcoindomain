import { TYPES } from '../constants';
import { IExchangeTransaction, IExchangeTransactionOrderWithProofs } from '@waves/ts-types';
import { TLong, TMoney, TWithPartialFee } from '../types';
import { IDefaultGuiTx } from './general';
export declare const remapOrder: (data: IWavesGuiExchangeOrder) => IExchangeTransactionOrderWithProofs<string>;
export declare const exchange: (data: IWavesGuiExchange) => TWithPartialFee<IExchangeTransaction<string>>;
export interface IWavesGuiExchange extends IDefaultGuiTx<typeof TYPES.EXCHANGE> {
    buyOrder: IWavesGuiExchangeOrder;
    sellOrder: IWavesGuiExchangeOrder;
    price: TLong;
    amount: TLong;
    buyMatcherFee: TMoney;
    sellMatcherFee: TMoney;
}
export interface IWavesGuiExchangeOrder {
    version: number;
    matcherPublicKey: string;
    orderType: 'buy' | 'sell';
    price: TMoney;
    amount: TMoney;
    matcherFee: TMoney;
    timestamp: number;
    expiration: number;
    senderPublicKey: string;
    proofs: Array<string>;
}
