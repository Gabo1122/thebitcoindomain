import { TYPES } from '../constants';
import { IMassTransferTransaction } from '@waves/ts-types';
import { TLong, TMoney, TWithPartialFee } from '../types';
import { IDefaultGuiTx } from './general';
export declare const massTransfer: (data: TWavesGuiMassTransfer) => TWithPartialFee<IMassTransferTransaction<string>>;
export interface IWavesGuiMassTransferMoney extends IDefaultGuiTx<typeof TYPES.MASS_TRANSFER> {
    attachment?: string;
    transfers: Array<IWavesGuiMassTransferItem<TMoney>>;
}
export interface IWavesGuiMassTransferLong extends IDefaultGuiTx<typeof TYPES.MASS_TRANSFER> {
    attachment?: string;
    assetId: string;
    transfers: Array<IWavesGuiMassTransferItem<TLong>>;
}
export declare type TWavesGuiMassTransfer = IWavesGuiMassTransferMoney | IWavesGuiMassTransferLong;
interface IWavesGuiMassTransferItem<T extends TMoney | TLong> {
    recipient: string;
    amount: T;
}
export {};
