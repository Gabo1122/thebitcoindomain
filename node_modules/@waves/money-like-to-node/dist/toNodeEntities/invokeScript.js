"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var factory_1 = require("../core/factory");
var general_1 = require("./general");
var utils_1 = require("../utils");
var isNull = function (data) { return data == null; };
var defaultNull = function () { return null; };
var processArgument = function (data) {
    if (data.type === 'integer') {
        return { type: data.type, value: utils_1.getCoins(data.value) };
    }
    else {
        return data;
    }
};
var processCall = factory_1.factory({
    function: utils_1.prop('function'),
    args: utils_1.pipe(utils_1.prop('args'), utils_1.map(processArgument))
});
var processPayment = factory_1.factory({
    amount: utils_1.getCoins,
    assetId: utils_1.getAssetId
});
exports.invokeScript = factory_1.factory(__assign({}, general_1.getDefaultTransform(), { chainId: utils_1.prop('chainId'), dApp: utils_1.prop('dApp'), feeAssetId: utils_1.pipe(utils_1.prop('fee'), utils_1.getAssetId, utils_1.defaultTo('WAVES')), call: utils_1.pipe(utils_1.prop('call'), utils_1.ifElse(isNull, defaultNull, function (call) { return processCall(call); })), payment: utils_1.pipe(utils_1.prop('payment'), utils_1.ifElse(isNull, defaultNull, function (payment) { return utils_1.map(processPayment)(payment); })) }));
//# sourceMappingURL=invokeScript.js.map