"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var alias_1 = require("./alias");
var burn_1 = require("./burn");
var cancelLease_1 = require("./cancelLease");
var data_1 = require("./data");
var exchange_1 = require("./exchange");
var issue_1 = require("./issue");
var reissue_1 = require("./reissue");
var lease_1 = require("./lease");
var massTransfer_1 = require("./massTransfer");
var setAssetScript_1 = require("./setAssetScript");
var setScript_1 = require("./setScript");
var sponsorship_1 = require("./sponsorship");
var transfer_1 = require("./transfer");
var constants_1 = require("../constants");
var utils_1 = require("../utils");
var invokeScript_1 = require("./invokeScript");
exports.node = {
    alias: alias_1.alias, burn: burn_1.burn, cancelLease: cancelLease_1.cancelLease,
    data: data_1.data, exchange: exchange_1.exchange, issue: issue_1.issue,
    reissue: reissue_1.reissue, lease: lease_1.lease, massTransfer: massTransfer_1.massTransfer,
    setAssetScript: setAssetScript_1.setAssetScript, setScript: setScript_1.setScript, sponsorship: sponsorship_1.sponsorship,
    transfer: transfer_1.transfer, order: exchange_1.remapOrder, invokeScript: invokeScript_1.invokeScript
};
function toNode(item) {
    if (utils_1.isOrder(item)) {
        return exchange_1.remapOrder(item);
    }
    switch (item.type) {
        case constants_1.TYPES.ISSUE:
            return issue_1.issue(item);
        case constants_1.TYPES.TRANSFER:
            return transfer_1.transfer(item);
        case constants_1.TYPES.REISSUE:
            return reissue_1.reissue(item);
        case constants_1.TYPES.BURN:
            return burn_1.burn(item);
        case constants_1.TYPES.EXCHANGE:
            return exchange_1.exchange(item);
        case constants_1.TYPES.LEASE:
            return lease_1.lease(item);
        case constants_1.TYPES.CANCEL_LEASE:
            return cancelLease_1.cancelLease(item);
        case constants_1.TYPES.ALIAS:
            return alias_1.alias(item);
        case constants_1.TYPES.MASS_TRANSFER:
            return massTransfer_1.massTransfer(item);
        case constants_1.TYPES.DATA:
            return data_1.data(item);
        case constants_1.TYPES.SET_SCRIPT:
            return setScript_1.setScript(item);
        case constants_1.TYPES.SPONSORSHIP:
            return sponsorship_1.sponsorship(item);
        case constants_1.TYPES.SET_ASSET_SCRIPT:
            return setAssetScript_1.setAssetScript(item);
        case constants_1.TYPES.INVOKE_SCRIPT:
            return invokeScript_1.invokeScript(item);
        default:
            throw new Error('Unknown transaction type!');
    }
}
exports.toNode = toNode;
//# sourceMappingURL=index.js.map