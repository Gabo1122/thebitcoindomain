"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function getAssetId(money) {
    if (!money || typeof money !== 'object') {
        return null;
    }
    if ('toCoins' in money) {
        return money.asset.id;
    }
    else if ('assetId' in money) {
        return money.assetId;
    }
    else {
        return null;
    }
}
exports.getAssetId = getAssetId;
function getCoins(money) {
    var result;
    if (money == null) {
        return null;
    }
    if (typeof money === 'object') {
        if ('toCoins' in money) {
            result = money.toCoins();
        }
        else if ('toFixed' in money) {
            result = money.toFixed();
        }
        else {
            result = String(money.coins);
        }
    }
    else {
        result = String(money);
    }
    return result;
}
exports.getCoins = getCoins;
exports.curry = function (func) {
    function loop(callback) {
        var local = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            local[_i - 1] = arguments[_i];
        }
        if (callback.length <= local.length) {
            return callback.apply(void 0, local);
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return loop.apply(void 0, [func].concat(local.concat(args)));
            };
        }
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return loop.apply(void 0, [func].concat(args));
    };
};
exports.ifElse = function (expression, resolve, reject) { return function (data) { return expression(data) ? resolve(data) : reject(data); }; };
exports.has = exports.curry(function (prop, data) { return Object.prototype.hasOwnProperty.call(data, prop); });
exports.emptyError = function (message) { return function (value) {
    if (value == null) {
        throw new Error(message);
    }
    return value;
}; };
function isOrder(data) {
    return ('orderType' in data);
}
exports.isOrder = isOrder;
exports.length = function (some) { return some.length; };
exports.lt = exports.curry(function (a, b) { return a < b; });
exports.gt = exports.curry(function (a, b) { return a > b; });
exports.lte = exports.curry(function (a, b) { return a <= b; });
exports.gte = exports.curry(function (a, b) { return a >= b; });
exports.head = function (list) { return list[0]; };
exports.defaultTo = function (value) { return function (data) { return data == null ? value : data; }; };
exports.map = exports.curry(function (cb, list) { return list.map(cb); });
exports.prop = exports.curry(function (key, data) { return Object.prototype.hasOwnProperty.call(data, key) ? data[key] : undefined; });
exports.pipe = function () {
    var processors = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        processors[_i] = arguments[_i];
    }
    return function (initial) { return processors.reduce(function (acc, cb) { return cb(acc); }, initial); };
};
//# sourceMappingURL=utils.js.map