import { TPredicate, TFunction } from './types';
export declare const noop: () => void;
export declare const defaultFetch: (...args: any[]) => Promise<string>;
export declare const defaultParse: any;
export declare const isNotString: (value: any) => boolean;
export declare const pipeP: (...fns: TFunction<any>[]) => (...args: any[]) => Promise<any>;
export declare const some: (predicate: TPredicate) => (arr: any[]) => boolean;
export declare const createQS: (obj: Object) => string;
export declare const id: (_: any) => any;
export declare const T: (...args: any[]) => boolean;
