(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("./utils");
var types_1 = require("./types");
exports.createRequest = function (methodUrl, params) {
    var URL_MAX_LENGTH = 2000;
    if (typeof params === 'undefined') {
        return { url: methodUrl, method: types_1.HttpMethods.Get };
    }
    var getUrl = "" + methodUrl + utils_1.createQS(params);
    return getUrl.length > URL_MAX_LENGTH
        ? {
            url: methodUrl,
            method: types_1.HttpMethods.Post,
            body: JSON.stringify(params),
            headers: {
                'Content-Type': 'application/json',
                Accept: 'application/json, text/plain, */*',
            },
        }
        : { url: getUrl, method: types_1.HttpMethods.Get };
};

},{"./types":13,"./utils":14}],2:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("./utils");
var transform_1 = require("./transform");
exports.defaultTransform = transform_1.default;
var getAssets_1 = require("./methods/getAssets");
var getAssetsByTicker_1 = require("./methods/getAssetsByTicker");
var getCandles_1 = require("./methods/getCandles");
var getPairs_1 = require("./methods/getPairs");
var getExchangeTxs_1 = require("./methods/getExchangeTxs");
var getTransferTxs_1 = require("./methods/getTransferTxs");
var getMassTransferTxs_1 = require("./methods/getMassTransferTxs");
var getAliases_1 = require("./methods/getAliases");
var DataServiceClient = /** @class */ (function () {
    function DataServiceClient(params) {
        var options = __assign({}, params);
        if (!options.rootUrl) {
            throw new Error('No rootUrl was presented in options object. Check constructor call.');
        }
        // Add defaults
        if (!options.transform) {
            options.transform = transform_1.default;
        }
        if (!options.fetch) {
            options.fetch = utils_1.defaultFetch;
        }
        if (!options.parse) {
            options.parse = utils_1.defaultParse;
        }
        // Create methods
        this.getAssets = getAssets_1.default(options);
        this.getAssetsByTicker = getAssetsByTicker_1.default(options);
        this.getCandles = getCandles_1.default(options);
        this.getPairs = getPairs_1.default(options);
        this.getExchangeTxs = getExchangeTxs_1.default(options);
        this.getTransferTxs = getTransferTxs_1.default(options);
        this.getMassTransferTxs = getMassTransferTxs_1.default(options);
        this.aliases = getAliases_1.default(options);
    }
    return DataServiceClient;
}());
exports.default = DataServiceClient;
__export(require("./types"));

},{"./methods/getAliases":4,"./methods/getAssets":5,"./methods/getAssetsByTicker":6,"./methods/getCandles":7,"./methods/getExchangeTxs":8,"./methods/getMassTransferTxs":9,"./methods/getPairs":10,"./methods/getTransferTxs":11,"./transform":12,"./types":13,"./utils":14}],3:[function(require,module,exports){
"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var createMethod = function (_a) {
    var _b = _a.validate, validate = _b === void 0 ? utils_1.T : _b, generateRequest = _a.generateRequest, libOptions = _a.libOptions, addPaginationToArgs = _a.addPaginationToArgs;
    function method() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return utils_1.pipeP(validate, generateRequest(libOptions.rootUrl), function (_a) {
            var url = _a.url, options = __rest(_a, ["url"]);
            return libOptions.fetch(url, options);
        }, libOptions.parse, function (rawData) {
            return utils_1.pipeP(libOptions.transform, addPagination({ method: method, args: args, addPaginationToArgs: addPaginationToArgs, rawData: rawData }))(rawData);
        }).apply(void 0, args);
    }
    return method;
};
exports.createMethod = createMethod;
var addPagination = function (_a) {
    var method = _a.method, args = _a.args, addPaginationToArgs = _a.addPaginationToArgs, rawData = _a.rawData;
    return function (data) {
        if (!data || !addPaginationToArgs || !rawData || !rawData.lastCursor) {
            return { data: data };
        }
        return {
            data: data,
            fetchMore: function (count) {
                return method(addPaginationToArgs({ args: args, cursor: rawData.lastCursor, count: count }));
            },
        };
    };
};

},{"../utils":14}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var createMethod_1 = require("./createMethod");
var createRequest_1 = require("../createRequest");
var validateId = function (id) {
    return utils_1.isNotString(id)
        ? Promise.reject(new Error('ArgumentsError: aliasId should be string'))
        : Promise.resolve(id);
};
var validateByAddressParams = function (_a) {
    var address = _a[0], options = _a[1];
    return utils_1.isNotString(address)
        ? Promise.reject(new Error('ArgumentsError: address should be string'))
        : Promise.resolve([address, options]);
};
var createRequestForId = function (rootUrl) { return function (id) {
    return createRequest_1.createRequest(rootUrl + "/aliases/" + id);
}; };
var createRequestForAddress = function (rootUrl) { return function (_a) {
    var address = _a[0], showBroken = _a[1].showBroken;
    return createRequest_1.createRequest(rootUrl + "/aliases", {
        address: address,
        showBroken: showBroken,
    });
}; };
var createGetAliases = function (libOptions) { return ({
    getById: createMethod_1.createMethod({
        validate: validateId,
        generateRequest: createRequestForId,
        libOptions: libOptions,
    }),
    getByAddress: function (address, options) {
        if (options === void 0) { options = {}; }
        return createMethod_1.createMethod({
            validate: validateByAddressParams,
            generateRequest: createRequestForAddress,
            libOptions: libOptions,
        })(address, options);
    },
}); };
exports.default = createGetAliases;

},{"../createRequest":1,"../utils":14,"./createMethod":3}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var createMethod_1 = require("./createMethod");
var createRequest_1 = require("../createRequest");
var validateIds = function (idOrIds) {
    var arrayToCheck = Array.isArray(idOrIds) ? idOrIds : [idOrIds];
    return arrayToCheck.some(utils_1.isNotString)
        ? Promise.reject(new Error('ArgumentsError: AssetId should be string'))
        : Promise.resolve(arrayToCheck);
};
var createRequestForMany = function (rootUrl) { return function (ids) { return createRequest_1.createRequest(rootUrl + "/assets", { ids: ids }); }; };
var createGetAssets = function (libOptions) {
    return createMethod_1.createMethod({
        validate: validateIds,
        generateRequest: createRequestForMany,
        libOptions: libOptions,
    });
};
exports.default = createGetAssets;

},{"../createRequest":1,"../utils":14,"./createMethod":3}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var createMethod_1 = require("./createMethod");
var createRequest_1 = require("../createRequest");
var validateTicker = function (ticker) {
    return typeof ticker !== 'string'
        ? Promise.reject(new Error('ArgumentsError: Ticker should be string'))
        : Promise.resolve(ticker);
};
var createRequestForMany = function (rootUrl) { return function (ticker) { return createRequest_1.createRequest(rootUrl + "/assets", { ticker: ticker }); }; };
var createGetAssetsByTicker = function (libOptions) {
    return createMethod_1.createMethod({
        validate: validateTicker,
        generateRequest: createRequestForMany,
        libOptions: libOptions,
    });
};
exports.default = createGetAssetsByTicker;

},{"../createRequest":1,"./createMethod":3}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var createMethod_1 = require("./createMethod");
var createRequest_1 = require("../createRequest");
var possibleParams = [
    'timeStart',
    'timeEnd',
    'interval',
    'matcher',
];
var isCandlesParams = function (params) {
    return typeof params === 'object' &&
        Object.keys(params).every(function (k) {
            return possibleParams.includes(k);
        });
};
var isFilters = function (filters) {
    return Array.isArray(filters) &&
        filters.length === 3 &&
        typeof filters[0] === 'string' &&
        typeof filters[1] === 'string' &&
        isCandlesParams(filters[2]);
};
var validateFilters = function (filters) {
    return isFilters(filters)
        ? Promise.resolve(filters)
        : Promise.reject('Wrong filters object');
};
var createRequestForCandles = function (rootUrl) { return function (_a) {
    var amountAssetId = _a[0], priceAssetId = _a[1], params = _a[2];
    return createRequest_1.createRequest(rootUrl + "/candles/" + amountAssetId + "/" + priceAssetId, params);
}; };
var createGetCandles = function (libOptions) {
    return createMethod_1.createMethod({
        validate: validateFilters,
        generateRequest: createRequestForCandles,
        libOptions: libOptions,
    });
};
exports.default = createGetCandles;

},{"../createRequest":1,"./createMethod":3}],8:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var createMethod_1 = require("./createMethod");
var createRequest_1 = require("../createRequest");
// One
var validateId = function (id) {
    return typeof id === 'string' ? Promise.resolve(id) : Promise.reject('Wrong id');
};
var generateRequestOne = function (rootUrl) { return function (id) {
    return createRequest_1.createRequest(rootUrl + "/transactions/exchange/" + id);
}; };
//Many
var isFilters = function (filters) {
    var possibleFilters = [
        'timeStart',
        'timeEnd',
        'limit',
        'sort',
        'matcher',
        'sender',
        'amountAsset',
        'priceAsset',
        'after',
    ];
    return (typeof filters === 'object' &&
        Object.keys(filters).every(function (k) { return possibleFilters.includes(k); }));
};
var validateFilters = function (filters) {
    return isFilters(filters)
        ? Promise.resolve(filters)
        : Promise.reject('Wrong filters object');
};
var generateRequestMany = function (rootUrl) { return function (filters) { return createRequest_1.createRequest(rootUrl + "/transactions/exchange", filters); }; };
var createGetExchangeTxs = function (libOptions) {
    var getExchangeTxsOne = createMethod_1.createMethod({
        validate: validateId,
        generateRequest: generateRequestOne,
        libOptions: libOptions,
    });
    var getExchangeTxsMany = createMethod_1.createMethod({
        validate: validateFilters,
        generateRequest: generateRequestMany,
        libOptions: libOptions,
        addPaginationToArgs: function (_a) {
            var filters = _a.args[0], cursor = _a.cursor, count = _a.count;
            return (__assign({}, filters, { after: cursor }, (count ? { limit: count } : {})));
        },
    });
    var getExchangeTxs = function (idOrFilters) {
        if (idOrFilters === void 0) { idOrFilters = {}; }
        return typeof idOrFilters === 'string'
            ? getExchangeTxsOne(idOrFilters)
            : getExchangeTxsMany(idOrFilters);
    };
    return getExchangeTxs;
};
exports.default = createGetExchangeTxs;

},{"../createRequest":1,"./createMethod":3}],9:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var createMethod_1 = require("./createMethod");
var createRequest_1 = require("../createRequest");
// One
var validateId = function (id) {
    return typeof id === 'string' ? Promise.resolve(id) : Promise.reject('Wrong id');
};
var generateRequestOne = function (rootUrl) { return function (id) {
    return createRequest_1.createRequest(rootUrl + "/transactions/mass-transfer/" + id);
}; };
//Many
var isFilters = function (filters) {
    var possibleFilters = [
        'sender',
        'assetId',
        'recipient',
        'after',
        'timeStart',
        'timeEnd',
        'sort',
        'limit',
    ];
    return (typeof filters === 'object' &&
        Object.keys(filters).every(function (k) { return possibleFilters.includes(k); }));
};
var validateFilters = function (filters) {
    return isFilters(filters)
        ? Promise.resolve(filters)
        : Promise.reject('Wrong filters object');
};
var generateRequestMany = function (rootUrl) { return function (filters) {
    return createRequest_1.createRequest(rootUrl + "/transactions/mass-transfer", filters);
}; };
var createGetMassTransferTxs = function (libOptions) {
    var getMassTransferTxsOne = createMethod_1.createMethod({
        validate: validateId,
        generateRequest: generateRequestOne,
        libOptions: libOptions,
    });
    var getMassTransferTxsMany = createMethod_1.createMethod({
        validate: validateFilters,
        generateRequest: generateRequestMany,
        libOptions: libOptions,
        addPaginationToArgs: function (_a) {
            var filters = _a.args[0], cursor = _a.cursor, count = _a.count;
            return (__assign({}, filters, { after: cursor }, (count ? { limit: count } : {})));
        },
    });
    var getMassTransferTxs = function (idOrFilters) {
        if (idOrFilters === void 0) { idOrFilters = {}; }
        return typeof idOrFilters === 'string'
            ? getMassTransferTxsOne(idOrFilters)
            : getMassTransferTxsMany(idOrFilters);
    };
    return getMassTransferTxs;
};
exports.default = createGetMassTransferTxs;

},{"../createRequest":1,"./createMethod":3}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var data_entities_1 = require("@waves/data-entities");
var createMethod_1 = require("./createMethod");
var createRequest_1 = require("../createRequest");
var isAssetPair = function (pair) {
    switch (true) {
        case typeof pair === 'string':
            return pair.split('/').length === 2;
        case typeof pair === 'object':
            return data_entities_1.AssetPair.isAssetPair(pair);
        default:
            return false;
    }
};
var isValidPairsFilters = function (request) {
    return (Array.isArray(request) &&
        request.length === 2 &&
        typeof request[0] === 'string' &&
        (Array.isArray(request[1]) ? request[1] : [request[1]]).every(isAssetPair));
};
var validateRequest = function (matcher) { return function (pairs) {
    var request = [matcher, pairs];
    return isValidPairsFilters(request)
        ? Promise.resolve(request)
        : Promise.reject(new Error('ArgumentsError: AssetPair should be object with amountAsset, priceAsset'));
}; };
var createRequestForMany = function (nodeUrl) { return function (_a) {
    var matcher = _a[0], pairs = _a[1];
    return createRequest_1.createRequest(nodeUrl + "/pairs", {
        pairs: pairs.map(function (p) { return p.toString(); }),
        matcher: matcher,
    });
}; };
var getPairs = function (libOptions) { return function (matcher) {
    return createMethod_1.createMethod({
        validate: validateRequest(matcher),
        generateRequest: createRequestForMany,
        libOptions: libOptions,
    });
}; };
exports.default = getPairs;

},{"../createRequest":1,"./createMethod":3,"@waves/data-entities":undefined}],11:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var createMethod_1 = require("./createMethod");
var createRequest_1 = require("../createRequest");
// One
var validateId = function (id) {
    return typeof id === 'string' ? Promise.resolve(id) : Promise.reject('Wrong id');
};
var generateRequestOne = function (rootUrl) { return function (id) {
    return createRequest_1.createRequest(rootUrl + "/transactions/transfer/" + id);
}; };
//Many
var isFilters = function (filters) {
    var possibleFilters = [
        'sender',
        'assetId',
        'recipient',
        'after',
        'timeStart',
        'timeEnd',
        'sort',
        'limit',
    ];
    return (typeof filters === 'object' &&
        Object.keys(filters).every(function (k) { return possibleFilters.includes(k); }));
};
var validateFilters = function (filters) {
    return isFilters(filters)
        ? Promise.resolve(filters)
        : Promise.reject('Wrong filters object');
};
var generateRequestMany = function (rootUrl) { return function (filters) { return createRequest_1.createRequest(rootUrl + "/transactions/transfer", filters); }; };
var createGetTransferTxs = function (libOptions) {
    var getTransferTxsOne = createMethod_1.createMethod({
        validate: validateId,
        generateRequest: generateRequestOne,
        libOptions: libOptions,
    });
    var getTransferTxsMany = createMethod_1.createMethod({
        validate: validateFilters,
        generateRequest: generateRequestMany,
        libOptions: libOptions,
        addPaginationToArgs: function (_a) {
            var filters = _a.args[0], cursor = _a.cursor, count = _a.count;
            return (__assign({}, filters, { after: cursor }, (count ? { limit: count } : {})));
        },
    });
    var getTransferTxs = function (idOrFilters) {
        if (idOrFilters === void 0) { idOrFilters = {}; }
        return typeof idOrFilters === 'string'
            ? getTransferTxsOne(idOrFilters)
            : getTransferTxsMany(idOrFilters);
    };
    return getTransferTxs;
};
exports.default = createGetTransferTxs;

},{"../createRequest":1,"./createMethod":3}],12:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var data_entities_1 = require("@waves/data-entities");
var types_1 = require("./types");
var utils_1 = require("./utils");
var transformer = function (_a) {
    var __type = _a.__type, data = _a.data, rest = __rest(_a, ["__type", "data"]);
    switch (__type) {
        case types_1.ApiTypes.List:
            return data.map(transformer);
        case types_1.ApiTypes.Asset:
            return transformAsset(data);
        case types_1.ApiTypes.Alias:
            return data;
        case types_1.ApiTypes.Pair:
            return transformPair(data);
        case types_1.ApiTypes.Transaction:
            return data;
        case types_1.ApiTypes.Candle:
            return transformCandle(data);
        default:
            return __assign({ __type: __type, data: data }, rest);
    }
};
var transformAsset = function (data) {
    return data === null ? null : new data_entities_1.Asset(data);
};
var transformPair = utils_1.id;
var transformCandle = function (data) {
    return data === null ? null : new data_entities_1.Candle(data);
};
exports.default = transformer;

},{"./types":13,"./utils":14,"@waves/data-entities":undefined}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ApiTypes;
(function (ApiTypes) {
    ApiTypes["List"] = "list";
    ApiTypes["Asset"] = "asset";
    ApiTypes["Pair"] = "pair";
    ApiTypes["Transaction"] = "transaction";
    ApiTypes["Alias"] = "alias";
    ApiTypes["Candle"] = "candle";
})(ApiTypes = exports.ApiTypes || (exports.ApiTypes = {}));
var HttpMethods;
(function (HttpMethods) {
    HttpMethods["Get"] = "GET";
    HttpMethods["Post"] = "POST";
})(HttpMethods = exports.HttpMethods || (exports.HttpMethods = {}));

},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.noop = function () { };
exports.defaultFetch = function () {
    var _a;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return (_a = window).fetch.apply(_a, args).then(function (res) {
        return res.ok
            ? res.text()
            : res.text().then(function (str) { return Promise.reject(new Error(str)); });
    });
};
exports.defaultParse = JSON.parse.bind(JSON);
exports.isNotString = function (value) { return typeof value !== 'string'; };
exports.pipeP = function () {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return fns.reduce(function (prev, fn) { return prev.then(fn); }, Promise.resolve(args.length === 1 ? args[0] : args));
    };
};
exports.some = function (predicate) { return function (arr) {
    return arr.some(predicate);
}; };
/**
 * @param obj flat object with primitives or arrays of primitives as values
 * @returns query string for obj
 */
/**
 * customSerialize :: a -> string
 */
var customSerialize = function (v) {
    switch (true) {
        case v instanceof Date:
            return v.toISOString();
        default:
            return v;
    }
};
var createKeyValue = function (key, v) { return key + "=" + customSerialize(v); };
exports.createQS = function (obj) {
    var qs = Object.entries(obj)
        .filter(function (_a) {
        var _ = _a[0], value = _a[1];
        return value !== undefined;
    })
        .map(function (_a) {
        var key = _a[0], valueOrValues = _a[1];
        return Array.isArray(valueOrValues)
            ? valueOrValues.map(function (v) { return createKeyValue(key, v); }).join('&')
            : createKeyValue(key, valueOrValues);
    })
        .join('&');
    return qs === '' ? qs : "?" + qs;
};
exports.id = function (_) { return _; };
exports.T = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return true;
};

},{}]},{},[2]);
