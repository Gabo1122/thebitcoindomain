"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var createMethod_1 = require("./createMethod");
var createRequest_1 = require("../createRequest");
var validateId = function (id) {
    return utils_1.isNotString(id)
        ? Promise.reject(new Error('ArgumentsError: aliasId should be string'))
        : Promise.resolve(id);
};
var validateByAddressParams = function (_a) {
    var address = _a[0], options = _a[1];
    return utils_1.isNotString(address)
        ? Promise.reject(new Error('ArgumentsError: address should be string'))
        : Promise.resolve([address, options]);
};
var createRequestForId = function (rootUrl) { return function (id) {
    return createRequest_1.createRequest(rootUrl + "/aliases/" + id);
}; };
var createRequestForAddress = function (rootUrl) { return function (_a) {
    var address = _a[0], showBroken = _a[1].showBroken;
    return createRequest_1.createRequest(rootUrl + "/aliases", {
        address: address,
        showBroken: showBroken,
    });
}; };
var createGetAliases = function (libOptions) { return ({
    getById: createMethod_1.createMethod({
        validate: validateId,
        generateRequest: createRequestForId,
        libOptions: libOptions,
    }),
    getByAddress: function (address, options) {
        if (options === void 0) { options = {}; }
        return createMethod_1.createMethod({
            validate: validateByAddressParams,
            generateRequest: createRequestForAddress,
            libOptions: libOptions,
        })(address, options);
    },
}); };
exports.default = createGetAliases;
