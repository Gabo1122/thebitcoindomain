"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.noop = function () { };
exports.defaultFetch = function () {
    var _a;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return (_a = window).fetch.apply(_a, args).then(function (res) {
        return res.ok
            ? res.text()
            : res.text().then(function (str) { return Promise.reject(new Error(str)); });
    });
};
exports.defaultParse = JSON.parse.bind(JSON);
exports.isNotString = function (value) { return typeof value !== 'string'; };
exports.pipeP = function () {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return fns.reduce(function (prev, fn) { return prev.then(fn); }, Promise.resolve(args.length === 1 ? args[0] : args));
    };
};
exports.some = function (predicate) { return function (arr) {
    return arr.some(predicate);
}; };
/**
 * @param obj flat object with primitives or arrays of primitives as values
 * @returns query string for obj
 */
/**
 * customSerialize :: a -> string
 */
var customSerialize = function (v) {
    switch (true) {
        case v instanceof Date:
            return v.toISOString();
        default:
            return v;
    }
};
var createKeyValue = function (key, v) { return key + "=" + customSerialize(v); };
exports.createQS = function (obj) {
    var qs = Object.entries(obj)
        .filter(function (_a) {
        var _ = _a[0], value = _a[1];
        return value !== undefined;
    })
        .map(function (_a) {
        var key = _a[0], valueOrValues = _a[1];
        return Array.isArray(valueOrValues)
            ? valueOrValues.map(function (v) { return createKeyValue(key, v); }).join('&')
            : createKeyValue(key, valueOrValues);
    })
        .join('&');
    return qs === '' ? qs : "?" + qs;
};
exports.id = function (_) { return _; };
exports.T = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return true;
};
