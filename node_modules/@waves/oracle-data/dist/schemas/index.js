"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _a, _b;
var constants_1 = require("../constants");
var response_1 = require("../response");
var utils_1 = require("../utils");
exports.DATA_PROVIDER_VERSION_MAP = (_a = {},
    _a[constants_1.DATA_PROVIDER_VERSIONS.BETA] = response_1.schema(response_1.processField(constants_1.DATA_PROVIDER_KEYS.VERSION, 'version', constants_1.DATA_ENTRY_TYPES.INTEGER), response_1.processField(constants_1.DATA_PROVIDER_KEYS.NAME, 'name', constants_1.DATA_ENTRY_TYPES.STRING), response_1.processField(constants_1.DATA_PROVIDER_KEYS.LINK, 'link', constants_1.DATA_ENTRY_TYPES.STRING), response_1.processField(constants_1.DATA_PROVIDER_KEYS.EMAIL, 'email', constants_1.DATA_ENTRY_TYPES.STRING), response_1.processDescription()),
    _a);
exports.ASSETS_VERSION_MAP = (_b = {},
    _b[constants_1.DATA_PROVIDER_VERSIONS.BETA] = function (id, status) {
        var replacer = utils_1.replaceKey(id);
        switch (status) {
            case constants_1.STATUS_LIST.SCAM:
            case constants_1.STATUS_LIST.SUSPICIOUS:
            case constants_1.STATUS_LIST.NOT_VERIFY:
                return response_1.schema(response_1.processField(replacer("version_<ASSET_ID>"), 'version', constants_1.DATA_ENTRY_TYPES.INTEGER), response_1.addAssetId(id), response_1.processField(replacer("status_<ASSET_ID>"), 'status', constants_1.DATA_ENTRY_TYPES.INTEGER), response_1.processField(replacer("link_<ASSET_ID>"), 'link', constants_1.DATA_ENTRY_TYPES.STRING, false), response_1.processField(replacer("ticker_<ASSET_ID>"), 'ticker', constants_1.DATA_ENTRY_TYPES.STRING, false), response_1.processField(replacer("email_<ASSET_ID>"), 'email', constants_1.DATA_ENTRY_TYPES.STRING, false), response_1.processDescription(id, false));
            case constants_1.STATUS_LIST.DETAILED:
            case constants_1.STATUS_LIST.VERIFIED:
                return response_1.schema(response_1.processField(replacer("version_<ASSET_ID>"), 'version', constants_1.DATA_ENTRY_TYPES.INTEGER), response_1.addAssetId(id), response_1.processField(replacer("status_<ASSET_ID>"), 'status', constants_1.DATA_ENTRY_TYPES.INTEGER), response_1.processField(replacer("logo_<ASSET_ID>"), 'logo', constants_1.DATA_ENTRY_TYPES.STRING), response_1.processField(replacer("link_<ASSET_ID>"), 'link', constants_1.DATA_ENTRY_TYPES.STRING), response_1.processField(replacer("ticker_<ASSET_ID>"), 'ticker', constants_1.DATA_ENTRY_TYPES.STRING), response_1.processField(replacer("email_<ASSET_ID>"), 'email', constants_1.DATA_ENTRY_TYPES.STRING), response_1.processDescription(id));
        }
    },
    _b);
exports.DATA_TO_FIELDS = {
    PROVIDER: utils_1.toFields(utils_1.addVersion(constants_1.DATA_PROVIDER_VERSIONS.BETA), utils_1.toField('name', constants_1.DATA_PROVIDER_KEYS.NAME, constants_1.DATA_ENTRY_TYPES.STRING), utils_1.toField('link', constants_1.DATA_PROVIDER_KEYS.LINK, constants_1.DATA_ENTRY_TYPES.STRING), utils_1.toField('email', constants_1.DATA_PROVIDER_KEYS.EMAIL, constants_1.DATA_ENTRY_TYPES.STRING), utils_1.descriptionToField()),
    ASSET: utils_1.toFields(utils_1.addAssetVersion(constants_1.DATA_PROVIDER_VERSIONS.BETA), utils_1.toAssetField('status', "status_<ASSET_ID>", constants_1.DATA_ENTRY_TYPES.INTEGER), utils_1.toAssetField('logo', "logo_<ASSET_ID>", constants_1.DATA_ENTRY_TYPES.STRING), utils_1.toAssetField('link', "link_<ASSET_ID>", constants_1.DATA_ENTRY_TYPES.STRING), utils_1.toAssetField('ticker', "ticker_<ASSET_ID>", constants_1.DATA_ENTRY_TYPES.STRING), utils_1.toAssetField('email', "email_<ASSET_ID>", constants_1.DATA_ENTRY_TYPES.STRING), utils_1.toAssetDescription())
};
//# sourceMappingURL=index.js.map