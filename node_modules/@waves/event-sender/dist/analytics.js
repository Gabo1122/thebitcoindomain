(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.analytics = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
///<reference path="../interface.d.ts"/>
var waves_browser_bus_1 = require("@waves/waves-browser-bus");
var Analytics = /** @class */ (function () {
    function Analytics() {
        this.events = [];
        this.apiList = [];
        this.createBusPromise = void 0;
        this.defaultParams = Object.create(null);
        this.isActive = false;
        if (Analytics.instance) {
            return Analytics.instance;
        }
        Analytics.instance = this;
    }
    Analytics.prototype.init = function (iframeUrl, defaultParams) {
        this.defaultParams = defaultParams || this.defaultParams;
        this.iframeUrl = iframeUrl;
    };
    Analytics.prototype.addDefaultParams = function (params) {
        this.defaultParams = Object.assign(this.defaultParams, params);
    };
    Analytics.prototype.deactivate = function () {
        this.isActive = false;
    };
    Analytics.prototype.activate = function () {
        var _this = this;
        if (!this.iframeUrl) {
            throw new Error("Initialize analytics with method \"init\"!");
        }
        if (this.createBusPromise) {
            return void 0;
        }
        this.createBusPromise = this._createBus(this.iframeUrl + Analytics.URL_PARAMS);
        this.createBusPromise.then(function (bus) {
            bus.dispatchEvent('has-referrer', document.referrer);
            _this.apiList.forEach(function (adapter) {
                bus.dispatchEvent('add-adapter', adapter);
            });
            _this.apiList = [];
            Analytics.asyncForEach(_this.events, function (event) {
                bus.dispatchEvent('event', __assign({}, event, { params: __assign({}, event.params || {}, _this.defaultParams) }));
            });
            _this.events = [];
            _this.isActive = true;
        });
    };
    Analytics.prototype.addApi = function (data) {
        if (this.createBusPromise) {
            this.createBusPromise.then(Analytics.dispatch('add-adapter', data));
        }
        else {
            this.apiList.push(data);
        }
    };
    Analytics.prototype.send = function (data) {
        if (this.isActive && this.createBusPromise) {
            this.createBusPromise.then(Analytics.dispatch('event', __assign({}, data, { params: __assign({}, data.params || {}, this.defaultParams) })));
        }
        else {
            this.events.push(data);
        }
    };
    Analytics.dispatch = function (event, data) {
        return function (bus) { return bus.dispatchEvent(event, data); };
    };
    Analytics.prototype._createBus = function (url) {
        var iframe = document.createElement('iframe');
        var promise = waves_browser_bus_1.WindowAdapter.createSimpleWindowAdapter(iframe)
            .then(function (adapter) { return new waves_browser_bus_1.Bus(adapter); });
        iframe.src = url;
        iframe.classList.add('analytics-sandbox-iframe');
        Analytics.addStyles(iframe, {
            width: '10px',
            height: '10px',
            position: 'fixed',
            left: '0',
            top: '0',
            transform: 'translate(-110%, -110%)'
        });
        document.body.appendChild(iframe);
        return promise;
    };
    Analytics.addStyles = function (element, styles) {
        this.entries(styles).forEach(function (_a) {
            var name = _a[0], value = _a[1];
            if (value) {
                element.style[name] = value;
            }
        });
    };
    Analytics.entries = function (item) {
        return Object.entries(item);
    };
    Analytics.asyncForEach = function (list, cb) {
        var clone = list.slice().reverse();
        var loop = function (item) {
            if (!item) {
                return void 0;
            }
            cb(item);
            setTimeout(function () { return loop(clone.pop()); }, 100);
        };
        loop(clone.pop());
    };
    Analytics.URL_PARAMS = window.location.search + window.location.hash;
    return Analytics;
}());
module.exports = new Analytics();

},{"@waves/waves-browser-bus":undefined}]},{},[1])(1)
});
